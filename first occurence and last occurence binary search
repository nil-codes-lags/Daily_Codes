class Solution {
    public int[] searchRange(int[] nums, int target) 
    {
    int a[]=new int[2];
        a[0]=firstoccurence(nums,target);
        a[1]=lastoccurence(nums,target);
        return a;  
    }
    int firstoccurence(int nums[],int target)
    {
        int n=nums.length;
        int low=0;
        int high=n-1;
        int in=-1;
        while(low<=high)
        {
            int mid=(low+(high-low)/2);
            if(nums[mid]==target)
            {
                in=mid;
                high=mid-1;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return in;
    }
    int lastoccurence(int nums[],int target)
    {
        int n=nums.length;
        int low=0;
        int high=n-1;
        int in=-1;
        while(low<=high)
        {
            int mid=(low+(high-low)/2);
            if(nums[mid]==target)
            {
                in=mid;
                low=mid+1;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return in;
}
}
